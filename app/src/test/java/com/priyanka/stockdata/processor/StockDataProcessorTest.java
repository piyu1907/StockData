package com.priyanka.stockdata.processor;

import com.priyanka.stockdata.model.Stock;
import com.priyanka.stockdata.model.StockSummary;

import org.junit.Assert;
import org.junit.Test;

import java.util.List;
import java.util.Map;

public class StockDataProcessorTest {

    private static final double DELTA = 1e-15;

    @Test
    public void testProcessResponse() throws Exception {
        String response = "{\"dataset_data\":{\"limit\":null,\"transform\":null,\"column_index\":null,\"column_names\":[\"Date\",\"Open\",\"High\",\"Low\",\"Close\",\"Volume\",\"Ex-Dividend\",\"Split Ratio\",\"Adj. Open\",\"Adj. High\",\"Adj. Low\",\"Adj. Close\",\"Adj. Volume\"],\"start_date\":\"2017-01-01\",\"end_date\":\"2017-06-30\",\"frequency\":\"daily\",\"data\":[[\"2017-01-03\",88.55,89.6,87.79,88.87,3441067.0,0.0,1.0,87.30123847595,88.336431027048,86.551956248488,87.616725729618,3441067.0],[\"2017-01-04\",89.13,90.77,89.13,90.3,2630905.0,0.0,1.0,87.873059123223,89.489931298271,87.873059123223,89.026559394447,2630905.0],[\"2017-01-05\",89.84,89.9299,87.6,88.38,2223944.0,0.0,1.0,88.573046467299,88.661678667626,86.364635691623,87.133635872438,2223944.0],[\"2017-01-06\",88.77,89.18,88.0901,88.6,1796424.0,0.0,1.0,87.518135962846,87.922354006608,86.847824138568,87.350533359335,1796424.0],[\"2017-01-09\",88.22,88.4,87.4,87.44,2122775.0,0.0,1.0,86.975892245604,87.153353825793,86.16745615808,86.206892064789,2122775.0],[\"2017-01-10\",87.81,89.37,87.44,88.98,3141198.0,0.0,1.0,86.571674201842,88.109674563474,86.206892064789,87.725174473066,3141198.0],[\"2017-01-11\",88.99,89.25,88.01,89.14,1885055.0,0.0,1.0,87.735033449743,87.991366843348,86.768853735385,87.8829180999,1885055.0],[\"2017-02-01\",88.1,88.95,87.23,87.51,2262668.0,0.0,1.0,86.857584525479,87.695597543035,85.999853554569,86.275904901528,2262668.0],[\"2017-02-02\",86.74,87.0,85.84,86.34,2147656.0,0.0,1.0,85.51676369739,85.773097090995,84.629455796448,85.122404630305,2147656.0],[\"2017-02-03\",87.94,88.08,86.66,87.92,2891218.0,0.0,1.0,86.699840898645,86.837866572125,85.437891883973,86.680122945291,2891218.0],[\"2017-02-06\",87.35,88.4,87.18,87.62,1430592.0,0.0,1.0,86.118161274694,87.153353825793,85.950558671183,86.384353644977,1430592.0],[\"2017-02-07\",88.1,88.42,87.2,88.11,3514042.0,0.0,1.0,86.857584525479,87.173071779147,85.970276624538,86.867443502156,3514042.0],[\"2017-02-08\",87.6,87.91,87.05,87.54,2052559.0,0.0,1.0,86.364635691623,86.670263968613,85.822391974381,86.30548183156,2052559.0],[\"2017-02-09\",87.56,88.7,87.11,88.54,1809247.0,0.4,1.0,86.715193910891,87.844194836638,86.269535650727,87.685738566357,1809247.0],[\"2017-03-01\",95.0,96.92,94.81,96.12,3387946.0,0.0,1.0,94.083410478924,95.984885722288,93.895243657966,95.192604370886,3387946.0],[\"2017-03-02\",96.21,96.325,94.28,94.33,1625881.0,0.0,1.0,95.281736022919,95.395626467183,93.370357262663,93.419874847126,1625881.0],[\"2017-03-03\",94.19,94.64,93.33,93.94,2541665.0,0.0,1.0,93.28122561063,93.726883870794,92.429523157874,93.033637688317,2541665.0],[\"2017-03-06\",93.5,93.68,92.85,93.0,1936761.0,0.0,1.0,92.597882945047,92.776146249112,91.954154347033,92.102707100421,1936761.0],[\"2017-03-07\",93.07,93.34,92.485,92.82,1641333.0,0.0,1.0,92.172031718668,92.439426674766,91.592675980456,91.924443796355,1641333.0],[\"2017-03-08\",94.02,94.43,92.28,92.4,2028560.0,0.0,1.0,93.112865823457,93.518910016051,91.389653884159,91.508496086869,2028560.0],[\"2017-03-09\",92.77,93.35,91.85,92.11,1653535.0,0.0,1.0,91.874926211893,92.449330191659,90.963802657781,91.221294096986,1653535.0],[\"2017-04-03\",86.88,86.91,84.67,85.8,3158771.0,0.0,1.0,86.041754762199,86.071465312877,83.853077528953,84.972174937807,3158771.0],[\"2017-04-04\",85.38,85.9,85.12,85.26,1840284.0,0.0,1.0,84.556227228322,85.071210106733,84.298735789116,84.437385025611,1840284.0],[\"2017-04-05\",86.58,86.62,83.98,84.13,2483680.0,0.0,1.0,85.744649255424,85.784263322994,83.169734863369,83.318287616757,2483680.0],[\"2017-04-06\",83.93,84.75,82.55,84.23,4378949.0,0.0,1.0,83.120217278906,83.932305664093,81.753531947739,83.417322785682,4378949.0],[\"2017-04-07\",83.25,84.33,82.79,83.54,2767335.0,0.0,1.0,82.446778130215,83.516357954607,81.991216353159,82.733980120098,2767335.0],[\"2017-04-10\",83.55,83.82,82.53,82.77,2463343.0,0.0,1.0,82.743883636991,83.011278593089,81.733724913954,81.971409319374,2463343.0],[\"2017-04-11\",82.4,83.11,81.62,83.09,2351190.0,0.0,1.0,81.604979194351,82.30812889372,80.832504876735,82.288321859935,2351190.0],[\"2017-05-01\",81.17,81.99,80.76,81.57,3543401.0,0.0,1.0,80.386846616571,81.198935001758,79.980802423978,80.782987292272,3543401.0],[\"2017-05-02\",81.58,82.47,80.97,82.46,3020580.0,0.0,1.0,80.792890809165,81.674303812599,80.188776278721,81.664400295706,3020580.0],[\"2017-05-03\",82.08,82.82,81.78,82.49,2451444.0,0.0,1.0,81.288066653791,82.020926903837,80.990961147015,81.694110846384,2451444.0],[\"2017-05-04\",83.02,83.21,82.17,82.49,3154418.0,0.0,1.0,82.218997241687,82.407164062645,81.377198305823,81.694110846384,3154418.0],[\"2017-05-05\",82.88,82.99,82.0,82.27,2269861.0,0.0,1.0,82.080348005192,82.18928669101,81.20883851865,81.476233474748,2269861.0],[\"2017-05-08\",82.34,82.41,81.84,82.12,1717675.0,0.0,1.0,81.545558092996,81.614882711244,81.05038224837,81.327680721361,1717675.0],[\"2017-05-09\",82.2,82.81,81.82,82.32,1832887.0,0.0,1.0,81.406908856501,82.011023386944,81.030575214585,81.525751059211,1832887.0],[\"2017-06-01\",77.46,77.97,76.81,77.92,3295232.0,0.0,1.0,77.095439463466,77.60303918108,76.4484986469,77.553274502883,3295232.0],[\"2017-06-02\",77.42,78.34,76.91,78.04,2527770.0,0.0,1.0,77.055627720908,77.971297799741,76.548028003295,77.672709730557,2527770.0],[\"2017-06-05\",78.05,78.83,77.775,78.33,2017310.0,0.0,1.0,77.682662666196,78.458991646076,77.40895693611,77.961344864102,2017310.0],[\"2017-06-06\",77.77,78.43,77.1,78.27,2504527.0,0.0,1.0,77.40398046829,78.060874220497,76.737133780445,77.901627250265,2504527.0],[\"2017-06-07\",78.52,79.52,78.21,78.9,2442435.0,0.0,1.0,78.150450641252,79.145744205201,77.841909636428,78.528662195552,2442435.0],[\"2017-06-08\",78.92,80.16,78.79,79.42,2306510.0,0.0,1.0,78.548568066831,79.782732086128,78.419179903518,79.046214848806,2306510.0],[\"2017-06-09\",80.07,80.42,79.31,80.07,3476989.0,0.0,1.0,79.693155665372,80.041508412754,78.936732556771,79.693155665372,3476989.0]],\"collapse\":\"daily\",\"order\":\"asc\"}}";
        Map<String, List<Stock>> stockDataMap = StockDataProcessor.processResponse(response);

        StockSummary summary = StockDataProcessor.processStockData(stockDataMap);
        Assert.assertNotNull(summary);
        Assert.assertEquals("Incorrect Average Open for January", new Double(88.68),
                summary.getMonthlyStockDataList().get(0).getAverageOpen(), DELTA);

        Assert.assertEquals("Incorrect Average Close for January", new Double(88.65),
                summary.getMonthlyStockDataList().get(0).getAverageClose(), DELTA);

        Assert.assertEquals("Incorrect Max profit", new Double(2.64),
                summary.getMaxProfit(), DELTA);

        Assert.assertEquals("Incorrect Max profit", new Double(2480229.1),
                summary.getAvgVolume(), DELTA);

        Assert.assertEquals("Incorrect Max profit", 0,
                summary.getHighVolumeDate().size());

        Assert.assertEquals("Incorrect Max profit Date", "2017-04-05",
                summary.getMaxProfitDate());

        Assert.assertEquals("Incorrect number of loser dates", 20,
                summary.getLoserDaysCounter());

    }
}